<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        e+NCngAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        e+NCngAAAABJRU5ErkJggg==
</value>
  </data>
</root>